import tensorflow
from tensorflow.math import log
from tensorflow.math import sqrt
from tensorflow.math import atan2
from tensorflow.math import pow


@tensorflow.function
def deflection_0(x, y, e, r_core, r_cut):
    x0 = -y
    x1 = sqrt(e)
    x2 = 2.0*x1
    x3 = r_core*x2 + x0
    x4 = e + 1
    x5 = 1 - e
    x6 = x5/x4
    x7 = x*x6
    x8 = -x4*y/x5
    x9 = pow(x, 2)
    x10 = x9/pow(e + 1.0, 2) + pow(y, 2)/pow(1.0 - e, 2)
    x11 = x2*sqrt(pow(r_cut, 2) + x10) + x8
    x12 = x*x11 + x3*x7
    x13 = x6*x9
    x14 = -x11*x3 + x13
    x15 = pow(x12, 2) + pow(x14, 2)
    x16 = pow(x15, -1)
    x17 = r_cut*x2 + x0
    x18 = x2*sqrt(pow(r_core, 2) + x10) + x8
    x19 = x*x18 + x17*x7
    x20 = x13 - x17*x18
    x21 = -x12*x20 + x14*x19
    x22 = x12*x19 + x14*x20
    x23 = r_cut*(0.5*pow(e, 2) - 0.5)/(x1*(-r_core + r_cut))
    x24 = pow(x15, -2)
    return [-x23*atan2(x16*x21, x16*x22), x23*log(sqrt(pow(x21, 2)*x24 + pow(x22, 2)*x24))]


@tensorflow.function
def deflection_1(x, y, e, r_core, r_cut):
    x0 = -y
    x1 = sqrt(e)
    x2 = 2.0*x1
    x3 = r_core*x2 + x0
    x4 = e + 1
    x5 = pow(x4, -1)
    x6 = 1 - e
    x7 = x5*x6
    x8 = x*x7
    x9 = -x4*y/x6
    x10 = pow(x, 2)
    x11 = x10/pow(e + 1.0, 2) + pow(y, 2)/pow(1.0 - e, 2)
    x12 = sqrt(pow(r_cut, 2) + x11)
    x13 = x12*x2 + x9
    x14 = x*x13 + x3*x8
    x15 = x10*x7
    x16 = -x13*x3 + x15
    x17 = pow(x14, 2) + pow(x16, 2)
    x18 = pow(x17, -1)
    x19 = r_cut*x2
    x20 = x0 + x19
    x21 = x2*sqrt(pow(r_core, 2) + x11) + x9
    x22 = x*x21 + x20*x8
    x23 = x15 - x20*x21
    x24 = -x14*x23 + x16*x22
    x25 = x18*x24
    x26 = x14*x22 + x16*x23
    x27 = x18*x26
    x28 = atan2(x25, x27)
    x29 = -r_core + r_cut
    x30 = pow(x1, -1)
    x31 = 0.5*pow(e, 2) - 0.5
    x32 = x30*x31
    x33 = x32/x29
    x34 = pow(x29, -2)
    x35 = pow(x17, -2)
    x36 = pow(x26, 2)
    x37 = pow(x24, 2)
    x38 = x35*x36 + x35*x37
    x39 = pow(x38, -1)
    x40 = pow(x12, -1)
    x41 = x19*x40
    x42 = x*x41
    x43 = x3*x41
    x44 = 4.0*x1
    x45 = x14*x44
    x46 = r_cut*x40
    x47 = x*x46
    x48 = x35*(4.0*r_cut*x1*x16*x3*x40 - x45*x47)
    x49 = r_cut*x33
    x50 = log(sqrt(x38))
    x51 = (1/2)*(8.0*r_cut*x1*x16*x3*x40 - 8.0*x1*x14*x47)/pow(x17, 3)
    x52 = x44*x47
    x53 = x3*x44*x46
    x54 = (1/2)*x35
    return [r_cut*x28*x30*x31*x34 - x28*x33 - x49*(-x25*x39*(x18*(x14*x2*x8 - x16*x2*x21 + x22*x42 - x23*x43) + x26*x48) + x27*x39*(x18*(2.0*x*x1*x16*x5*x6 + 2.0*x1*x14*x21 - x22*x43 - x23*x42) + x24*x48)), -r_cut*x32*x34*x50 + x33*x50 + x39*x49*(x24*x54*(4.0*x*x1*x16*x5*x6 + 4.0*x1*x14*x21 - x22*x53 - x23*x52) + x26*x54*(-x16*x21*x44 + x22*x52 - x23*x53 + x45*x8) + x36*x51 + x37*x51)]


@tensorflow.function
def deflection_2(x, y, e, r_core, r_cut):
    x0 = sqrt(e)
    x1 = pow(x0, -1)
    x2 = 0.5*pow(e, 2) - 0.5
    x3 = -r_core + r_cut
    x4 = pow(x3, -2)
    x5 = -y
    x6 = r_core*x0
    x7 = x5 + 2.0*x6
    x8 = e + 1
    x9 = pow(x8, -1)
    x10 = 1 - e
    x11 = x10*x9
    x12 = x*x11
    x13 = x12*x7
    x14 = -x8*y/x10
    x15 = pow(r_cut, 2)
    x16 = pow(x, 2)
    x17 = x16/pow(e + 1.0, 2) + pow(y, 2)/pow(1.0 - e, 2)
    x18 = x15 + x17
    x19 = sqrt(x18)
    x20 = 2.0*x0
    x21 = x14 + x19*x20
    x22 = x*x21 + x13
    x23 = x11*x16
    x24 = -x21*x7 + x23
    x25 = pow(x22, 2) + pow(x24, 2)
    x26 = pow(x25, -1)
    x27 = r_cut*x20
    x28 = x27 + x5
    x29 = x14 + x20*sqrt(pow(r_core, 2) + x17)
    x30 = x*x29
    x31 = x12*x28 + x30
    x32 = x23 - x28*x29
    x33 = -x22*x32 + x24*x31
    x34 = x26*x33
    x35 = x22*x31 + x24*x32
    x36 = x26*x35
    x37 = atan2(x34, x36)
    x38 = 2*x1*x2
    x39 = r_cut*x38/pow(x3, 3)
    x40 = pow(x3, -1)
    x41 = pow(x25, -2)
    x42 = pow(x35, 2)
    x43 = pow(x33, 2)
    x44 = x41*x42 + x41*x43
    x45 = pow(x44, -1)
    x46 = x*x32
    x47 = pow(x19, -1)
    x48 = x27*x47
    x49 = x31*x48
    x50 = 2.0*x*x0*x10*x24*x9 + 2.0*x0*x22*x29 - x46*x48 - x49*x7
    x51 = x26*x50
    x52 = 4.0*x0
    x53 = x47*x52
    x54 = x*x22
    x55 = x53*x54
    x56 = 4.0*r_cut*x0*x24*x47*x7 - r_cut*x55
    x57 = x41*x56
    x58 = x33*x57
    x59 = x51 + x58
    x60 = x45*x59
    x61 = x32*x7
    x62 = x*x49 + x12*x20*x22 - x20*x24*x29 - x48*x61
    x63 = x26*x62
    x64 = x35*x57
    x65 = x63 + x64
    x66 = x45*x65
    x67 = -x34*x66 + x36*x60
    x68 = 8.0*e
    x69 = r_cut*x47
    x70 = x68*x69
    x71 = x20*x47
    x72 = pow(x18, -3/2)
    x73 = x15*x72
    x74 = x20*x73
    x75 = x31*x71
    x76 = x31*x74
    x77 = 2*x57
    x78 = pow(x25, -3)
    x79 = 8.0*x0
    x80 = x47*x54*x79
    x81 = 8.0*r_cut*x0*x24*x47*x7 - r_cut*x80
    x82 = x78*x81
    x83 = x56*x82
    x84 = pow(x18, -1)
    x85 = x15*x16*x84
    x86 = 4.0*pow(x6 - 0.5*y, 2)
    x87 = x24*x7
    x88 = x52*x73
    x89 = x41*(-8.0*e*x15*x84*x86 + 4.0*x*x0*x15*x22*x72 + 4.0*x0*x24*x47*x7 - x55 - x68*x85 - x87*x88)
    x90 = x29*x7
    x91 = x42*x82
    x92 = x43*x82
    x93 = x31*x53
    x94 = x*x93
    x95 = x53*x61
    x96 = r_cut*x94 - r_cut*x95 + x12*x22*x52 - x24*x29*x52
    x97 = x35*x41
    x98 = x96*x97
    x99 = x46*x53
    x100 = x7*x93
    x101 = -r_cut*x100 - r_cut*x99 + 4.0*x*x0*x10*x24*x9 + 4.0*x0*x22*x29
    x102 = x33*x41
    x103 = x101*x102
    x104 = (-x103 - x91 - x92 - x98)/pow(x44, 2)
    x105 = r_cut*x1*x2*x40
    x106 = log(sqrt(x44))
    x107 = x38*x4
    x108 = (1/2)*x103 + (1/2)*x91 + (1/2)*x92 + (1/2)*x98
    x109 = x108*x45
    x110 = (1/2)*x42
    x111 = x81*(12.0*r_cut*x0*x24*x47*x7 - 12.0*x0*x54*x69)/pow(x25, 4)
    x112 = (1/2)*x43
    x113 = 16.0*e
    x114 = x78*(-16.0*e*x15*x84*x86 + 8.0*x*x0*x15*x22*x72 + 8.0*x0*x24*x47*x7 - x113*x85 - x73*x79*x87 - x80)
    x115 = x113*x69
    x116 = x31*x88
    x117 = (1/2)*x41
    return [2*r_cut*x1*x2*x4*x67 + 2*x1*x2*x37*x4 - x105*(-x104*x34*x65 + x104*x36*x59 - x34*x45*(x26*(x*x75 - x*x76 + x23*x70 - x61*x71 + x61*x74 + x70*x90) + x35*x83 + x35*x89 + x62*x77) + x36*x45*(x26*(-x13*x70 + x30*x70 - x46*x71 + x46*x74 - x7*x75 + x7*x76) + x33*x83 + x33*x89 + x50*x77) - x51*x66 - x58*x66 + x60*x63 + x60*x64) - x37*x39 - x38*x40*x67, -r_cut*x107*x109 + x104*x105*x108 + x105*x45*(x101*x117*x50 + x101*x33*x82 + (1/2)*x102*(-x100 - x115*x13 + x115*x30 + x116*x7 + x46*x88 - x99) + x110*x111 + x110*x114 + x111*x112 + x112*x114 + x117*x62*x96 + x35*x82*x96 + (1/2)*x97*(-x*x116 + x115*x23 + x115*x90 + x61*x88 + x94 - x95)) - x106*x107 + x106*x39 + x109*x38*x40]


@tensorflow.function
def deflection_3(x, y, e, r_core, r_cut):
    x0 = -y
    x1 = sqrt(e)
    x2 = r_core*x1
    x3 = x0 + 2.0*x2
    x4 = e + 1
    x5 = pow(x4, -1)
    x6 = 1 - e
    x7 = x5*x6
    x8 = x*x7
    x9 = x3*x8
    x10 = -x4*y/x6
    x11 = pow(r_cut, 2)
    x12 = pow(x, 2)
    x13 = x12/pow(e + 1.0, 2) + pow(y, 2)/pow(1.0 - e, 2)
    x14 = x11 + x13
    x15 = sqrt(x14)
    x16 = 2.0*x1
    x17 = x10 + x15*x16
    x18 = x*x17 + x9
    x19 = x12*x7
    x20 = -x17*x3 + x19
    x21 = pow(x18, 2) + pow(x20, 2)
    x22 = pow(x21, -1)
    x23 = r_cut*x16
    x24 = x0 + x23
    x25 = x10 + x16*sqrt(pow(r_core, 2) + x13)
    x26 = x*x25
    x27 = x24*x8 + x26
    x28 = x19 - x24*x25
    x29 = -x18*x28 + x20*x27
    x30 = x22*x29
    x31 = x18*x27 + x20*x28
    x32 = x22*x31
    x33 = atan2(x30, x32)
    x34 = -r_core + r_cut
    x35 = pow(x1, -1)
    x36 = 0.5*pow(e, 2) - 0.5
    x37 = x35*x36
    x38 = 6*x37
    x39 = x38/pow(x34, 3)
    x40 = pow(x34, -4)
    x41 = pow(x34, -2)
    x42 = pow(x21, -2)
    x43 = pow(x31, 2)
    x44 = pow(x29, 2)
    x45 = x42*x43 + x42*x44
    x46 = pow(x45, -1)
    x47 = x*x28
    x48 = pow(x15, -1)
    x49 = x23*x48
    x50 = x27*x49
    x51 = 2.0*x*x1*x20*x5*x6 + 2.0*x1*x18*x25 - x3*x50 - x47*x49
    x52 = x22*x51
    x53 = 4.0*x1
    x54 = x48*x53
    x55 = x*x18
    x56 = x54*x55
    x57 = 4.0*r_cut*x1*x20*x3*x48 - r_cut*x56
    x58 = x29*x42
    x59 = x57*x58
    x60 = x52 + x59
    x61 = x46*x60
    x62 = x28*x3
    x63 = x*x50 + x16*x18*x8 - x16*x20*x25 - x49*x62
    x64 = x22*x63
    x65 = x31*x42
    x66 = x57*x65
    x67 = x64 + x66
    x68 = x46*x67
    x69 = -x30*x68 + x32*x61
    x70 = r_cut*x39
    x71 = x37/x34
    x72 = e*x48
    x73 = r_cut*x72
    x74 = 8.0*x73
    x75 = x16*x48
    x76 = pow(x14, -3/2)
    x77 = x11*x76
    x78 = x16*x77
    x79 = x27*x75
    x80 = x27*x78
    x81 = x26*x74 - x3*x79 + x3*x80 - x47*x75 + x47*x78 - x74*x9
    x82 = x22*x81
    x83 = x42*x51
    x84 = 2*x57
    x85 = x83*x84
    x86 = pow(x21, -3)
    x87 = x1*x48
    x88 = 8.0*x55*x87
    x89 = 8.0*r_cut*x1*x20*x3*x48 - r_cut*x88
    x90 = x86*x89
    x91 = x57*x90
    x92 = x29*x91
    x93 = 8.0*x11
    x94 = pow(x14, -1)
    x95 = e*x12*x94
    x96 = pow(x2 - 0.5*y, 2)
    x97 = 4.0*x96
    x98 = x20*x3
    x99 = x53*x77
    x100 = -8.0*e*x11*x94*x97 + 4.0*x*x1*x11*x18*x76 + 4.0*x1*x20*x3*x48 - x56 - x93*x95 - x98*x99
    x101 = x100*x58
    x102 = x101 + x82 + x85 + x92
    x103 = x32*x46
    x104 = x25*x3
    x105 = x*x79 - x*x80 + x104*x74 + x19*x74 - x62*x75 + x62*x78
    x106 = x105*x22
    x107 = x42*x63
    x108 = x107*x84
    x109 = x31*x91
    x110 = x100*x65
    x111 = x106 + x108 + x109 + x110
    x112 = x30*x46
    x113 = pow(x45, -2)
    x114 = x43*x90
    x115 = x44*x90
    x116 = x27*x54
    x117 = x*x116
    x118 = x54*x62
    x119 = r_cut*x117 - r_cut*x118 + x18*x53*x8 - x20*x25*x53
    x120 = x119*x65
    x121 = x47*x54
    x122 = x116*x3
    x123 = -r_cut*x121 - r_cut*x122 + 4.0*x*x1*x20*x5*x6 + 4.0*x1*x18*x25
    x124 = x123*x58
    x125 = -x114 - x115 - x120 - x124
    x126 = x113*x125
    x127 = x32*x60
    x128 = x30*x67
    x129 = x102*x103 - x111*x112 + x126*x127 - x126*x128 - x52*x68 - x59*x68 + x61*x64 + x61*x66
    x130 = 2*x46
    x131 = x111*x130
    x132 = x102*x130
    x133 = 2*x126
    x134 = x133*x67
    x135 = x133*x60
    x136 = x125*(-2*x114 - 2*x115 - 2*x120 - 2*x124)/pow(x45, 3)
    x137 = 12.0*x72
    x138 = e*x77
    x139 = 12.0*x138
    x140 = 6.0*x1
    x141 = pow(r_cut, 3)
    x142 = pow(x14, -5/2)
    x143 = x141*x142
    x144 = x27*x3
    x145 = x140*x143
    x146 = x42*x81
    x147 = 3*x57
    x148 = 3*x91
    x149 = 3*x100
    x150 = pow(x21, -4)
    x151 = 12.0*x55*x87
    x152 = 12.0*r_cut*x1*x20*x3*x48 - r_cut*x151
    x153 = x150*x152
    x154 = x153*x89
    x155 = x154*x57
    x156 = r_cut*x95
    x157 = pow(x14, -2)
    x158 = e*x96
    x159 = 12.0*x1
    x160 = x143*x159
    x161 = r_cut*x76
    x162 = x159*x161
    x163 = -8.0*e*r_cut*x94*x97 + 24.0*e*x12*x141*x157 + 64.0*e*x141*x157*x96 + 8.0*e*x141*x157*x97 + 12.0*r_cut*x*x1*x18*x76 - 64.0*r_cut*x158*x94 + 12.0*x1*x141*x142*x20*x3 - 24.0*x156 - x160*x55 - x162*x98
    x164 = x11*x95
    x165 = x1*x98
    x166 = -16.0*e*x11*x94*x97 + 8.0*x*x1*x11*x18*x76 + 8.0*x1*x20*x3*x48 - 16.0*x164 - x165*x76*x93 - x88
    x167 = x166*x86
    x168 = x167*x57
    x169 = x29*x90
    x170 = 2*x100
    x171 = x140*x161
    x172 = x*x27
    x173 = x105*x42
    x174 = x31*x90
    x175 = x154*x43
    x176 = x154*x44
    x177 = x167*x43
    x178 = x167*x44
    x179 = 16.0*x73
    x180 = x104*x179 + x117 - x118 - x172*x99 + x179*x19 + x62*x99
    x181 = x180*x65
    x182 = -x121 - x122 + x144*x99 + x179*x26 - x179*x9 + x47*x99
    x183 = x182*x58
    x184 = x123*x83
    x185 = x107*x119
    x186 = x119*x174
    x187 = x123*x169
    x188 = x113*(-x175 - x176 - x177 - x178 - x181 - x183 - x184 - x185 - 2*x186 - 2*x187)
    x189 = r_cut*x71
    x190 = log(sqrt(x45))
    x191 = (1/2)*x114 + (1/2)*x115 + (1/2)*x120 + (1/2)*x124
    x192 = x191*x46
    x193 = 3*x71
    x194 = x126*x191
    x195 = 3*r_cut*x37*x41
    x196 = x189*x191
    x197 = (1/2)*x175 + (1/2)*x176 + (1/2)*x177 + (1/2)*x178 + (1/2)*x181 + (1/2)*x183 + (1/2)*x184 + (1/2)*x185 + x186 + x187
    x198 = x197*x46
    x199 = (1/2)*x43
    x200 = x199*x89
    x201 = x152*(16.0*r_cut*x1*x20*x3*x48 - 16.0*r_cut*x55*x87)/pow(x21, 5)
    x202 = (1/2)*x44
    x203 = x202*x89
    x204 = x86*(-16.0*e*r_cut*x94*x97 + 48.0*e*x12*x141*x157 + 128.0*e*x141*x157*x96 + 16.0*e*x141*x157*x97 + 24.0*r_cut*x*x1*x18*x76 - 128.0*r_cut*x158*x94 + 24.0*x1*x141*x142*x20*x3 - 24.0*x1*x143*x55 - 48.0*x156 - 24.0*x161*x165)
    x205 = 24.0*x72
    x206 = 24.0*x138
    x207 = x153*x166
    x208 = x150*(-24.0*e*x11*x94*x97 + 12.0*x*x1*x11*x18*x76 + 12.0*x1*x20*x3*x48 - x151 - x159*x77*x98 - 24.0*x164)
    x209 = (3/2)*x90
    x210 = x119*x31
    x211 = (3/2)*x154
    x212 = x123*x29
    x213 = (3/2)*x167
    return [3*r_cut*x129*x35*x36*x41 + 6*r_cut*x33*x35*x36*x40 - 3*x129*x71 - x189*(-x101*x68 + x102*x133*x32 + x103*(x146*x147 + x148*x51 + x149*x83 + x155*x29 + x163*x58 + x168*x29 + x169*x170 + x22*(12.0*e*x*x11*x3*x5*x6*x76 + 12.0*e*x*x25*x48 + 6.0*r_cut*x*x1*x28*x76 + 6.0*r_cut*x1*x27*x3*x76 - x137*x9 - x139*x26 - x140*x143*x47 - x144*x145)) + x106*x61 + x108*x61 + x109*x61 + x110*x61 - x111*x133*x30 - x112*(x107*x149 + x147*x173 + x148*x63 + x155*x31 + x163*x65 + x168*x31 + x170*x174 + x22*(x104*x137 - x104*x139 + x137*x19 - x139*x19 + x145*x172 - x145*x62 - x171*x172 + x171*x62)) + x127*x136 + x127*x188 - x128*x136 - x128*x188 - x131*x52 - x131*x59 + x132*x64 + x132*x66 - x134*x52 - x134*x59 + x135*x64 + x135*x66 - x68*x82 - x68*x85 - x68*x92) - x33*x39 + 6*x35*x36*x41*x69 - x69*x70, -r_cut*x190*x38*x40 + x133*x189*x197 + x136*x196 + x188*x196 + x189*x46*(x107*x180 + (1/2)*x119*x173 + x119*x209*x63 + (1/2)*x123*x146 + x123*x209*x51 + (3/2)*x169*x182 + (3/2)*x174*x180 + x182*x83 + x199*x204 + x200*x201 + x200*x208 + x201*x203 + x202*x204 + x203*x208 + x207*x43 + x207*x44 + x210*x211 + x210*x213 + x211*x212 + x212*x213 + (1/2)*x58*(24.0*e*x*x11*x3*x5*x6*x76 + 24.0*e*x*x25*x48 + 12.0*r_cut*x*x1*x28*x76 + 12.0*r_cut*x1*x27*x3*x76 - x144*x160 - x160*x47 - x205*x9 - x206*x26) + (1/2)*x65*(x104*x205 - x104*x206 + x160*x172 - x160*x62 - x162*x172 + x162*x62 + x19*x205 - x19*x206)) + x190*x39 - x192*x38*x41 + x192*x70 + x193*x194 + x193*x198 - x194*x195 - x195*x198]


@tensorflow.function
def deflection_4(x, y, e, r_core, r_cut):
    x0 = sqrt(e)
    x1 = pow(x0, -1)
    x2 = 0.5*pow(e, 2) - 0.5
    x3 = -r_core + r_cut
    x4 = pow(x3, -4)
    x5 = -y
    x6 = r_core*x0
    x7 = x5 + 2.0*x6
    x8 = e + 1
    x9 = pow(x8, -1)
    x10 = 1 - e
    x11 = x10*x9
    x12 = x*x11
    x13 = x12*x7
    x14 = -x8*y/x10
    x15 = pow(r_cut, 2)
    x16 = pow(x, 2)
    x17 = x16/pow(e + 1.0, 2) + pow(y, 2)/pow(1.0 - e, 2)
    x18 = x15 + x17
    x19 = sqrt(x18)
    x20 = 2.0*x0
    x21 = x14 + x19*x20
    x22 = x*x21 + x13
    x23 = x11*x16
    x24 = -x21*x7 + x23
    x25 = pow(x22, 2) + pow(x24, 2)
    x26 = pow(x25, -1)
    x27 = r_cut*x20
    x28 = x27 + x5
    x29 = x14 + x20*sqrt(pow(r_core, 2) + x17)
    x30 = x*x29
    x31 = x12*x28 + x30
    x32 = x23 - x28*x29
    x33 = -x22*x32 + x24*x31
    x34 = x26*x33
    x35 = x22*x31 + x24*x32
    x36 = x26*x35
    x37 = atan2(x34, x36)
    x38 = x1*x2
    x39 = 24*x38
    x40 = r_cut*x39/pow(x3, 5)
    x41 = pow(x3, -3)
    x42 = pow(x25, -2)
    x43 = pow(x35, 2)
    x44 = pow(x33, 2)
    x45 = x42*x43 + x42*x44
    x46 = pow(x45, -1)
    x47 = x*x32
    x48 = pow(x19, -1)
    x49 = x27*x48
    x50 = x31*x7
    x51 = 2.0*x*x0*x10*x24*x9 + 2.0*x0*x22*x29 - x47*x49 - x49*x50
    x52 = x26*x51
    x53 = 4.0*x0
    x54 = x48*x53
    x55 = x*x22
    x56 = x54*x55
    x57 = 4.0*r_cut*x0*x24*x48*x7 - r_cut*x56
    x58 = x42*x57
    x59 = x33*x58
    x60 = x52 + x59
    x61 = x46*x60
    x62 = x*x31
    x63 = x32*x7
    x64 = x12*x20*x22 - x20*x24*x29 + x49*x62 - x49*x63
    x65 = x26*x64
    x66 = x35*x58
    x67 = x65 + x66
    x68 = x46*x67
    x69 = -x34*x68 + x36*x61
    x70 = pow(x3, -2)
    x71 = 8.0*x48
    x72 = r_cut*x71
    x73 = e*x13
    x74 = e*x30
    x75 = x20*x48
    x76 = x32*x75
    x77 = pow(x18, -3/2)
    x78 = x15*x77
    x79 = x20*x78
    x80 = -x*x76 + x47*x79 - x50*x75 + x50*x79 - x72*x73 + x72*x74
    x81 = x26*x80
    x82 = 2*x58
    x83 = x51*x82
    x84 = pow(x25, -3)
    x85 = x0*x55
    x86 = x71*x85
    x87 = 8.0*r_cut*x0*x24*x48*x7 - r_cut*x86
    x88 = x84*x87
    x89 = x57*x88
    x90 = x33*x89
    x91 = pow(x18, -1)
    x92 = e*x91
    x93 = x16*x92
    x94 = x15*x93
    x95 = pow(x6 - 0.5*y, 2)
    x96 = 4.0*x95
    x97 = x24*x7
    x98 = x53*x78
    x99 = -8.0*e*x15*x91*x96 + 4.0*x*x0*x15*x22*x77 + 4.0*x0*x24*x48*x7 - x56 - 8.0*x94 - x97*x98
    x100 = x42*x99
    x101 = x100*x33
    x102 = x101 + x81 + x83 + x90
    x103 = x36*x46
    x104 = e*x23
    x105 = x29*x7
    x106 = e*x105
    x107 = x104*x72 + x106*x72 + x62*x75 - x62*x79 + x63*x79 - x7*x76
    x108 = x107*x26
    x109 = x64*x82
    x110 = x35*x89
    x111 = x100*x35
    x112 = x108 + x109 + x110 + x111
    x113 = x34*x46
    x114 = x36*x60
    x115 = pow(x45, -2)
    x116 = x43*x88
    x117 = x44*x88
    x118 = x54*x62
    x119 = x32*x54
    x120 = x119*x7
    x121 = r_cut*x118 - r_cut*x120 + x12*x22*x53 - x24*x29*x53
    x122 = x35*x42
    x123 = x121*x122
    x124 = x*x119
    x125 = x50*x54
    x126 = -r_cut*x124 - r_cut*x125 + 4.0*x*x0*x10*x24*x9 + 4.0*x0*x22*x29
    x127 = x33*x42
    x128 = x126*x127
    x129 = -x116 - x117 - x123 - x128
    x130 = x115*x129
    x131 = x34*x67
    x132 = x102*x103 - x112*x113 + x114*x130 - x130*x131 - x52*x68 - x59*x68 + x61*x65 + x61*x66
    x133 = r_cut*x38*x41
    x134 = x38/x3
    x135 = 2*x46
    x136 = x112*x52
    x137 = x102*x135
    x138 = x112*x59
    x139 = 2*x130
    x140 = x52*x67
    x141 = x60*x65
    x142 = x60*x66
    x143 = x59*x67
    x144 = x102*x36
    x145 = x112*x34
    x146 = -2*x116 - 2*x117 - 2*x123 - 2*x128
    x147 = pow(x45, -3)
    x148 = x129*x147
    x149 = x146*x148
    x150 = 12.0*x48
    x151 = e*x150
    x152 = 12.0*x77
    x153 = x15*x152
    x154 = x0*x47
    x155 = pow(r_cut, 3)
    x156 = pow(x18, -5/2)
    x157 = x155*x156
    x158 = 6.0*x157
    x159 = x0*x158
    x160 = 12.0*e*x*x10*x15*x7*x77*x9 + 12.0*e*x*x29*x48 + 6.0*r_cut*x*x0*x32*x77 + 6.0*r_cut*x0*x31*x7*x77 - x13*x151 - x153*x74 - x154*x158 - x159*x50
    x161 = x160*x26
    x162 = 3*x58
    x163 = x162*x80
    x164 = 3*x89
    x165 = x164*x51
    x166 = 3*x100
    x167 = x166*x51
    x168 = x33*x57
    x169 = x150*x85
    x170 = 12.0*r_cut*x0*x24*x48*x7 - r_cut*x169
    x171 = pow(x25, -4)
    x172 = x171*x87
    x173 = x170*x172
    x174 = x168*x173
    x175 = 24.0*x93
    x176 = pow(x18, -2)
    x177 = x92*x95
    x178 = r_cut*x177
    x179 = 12.0*x157
    x180 = x0*x97
    x181 = x152*x180
    x182 = -8.0*e*r_cut*x91*x96 + 24.0*e*x155*x16*x176 + 64.0*e*x155*x176*x95 + 8.0*e*x155*x176*x96 + 12.0*r_cut*x*x0*x22*x77 - r_cut*x175 - r_cut*x181 + 12.0*x0*x155*x156*x24*x7 - 64.0*x178 - x179*x85
    x183 = x182*x42
    x184 = x183*x33
    x185 = -16.0*e*x15*x91*x96 + 8.0*x*x0*x15*x22*x77 + 8.0*x0*x24*x48*x7 - 8.0*x180*x78 - x86 - 16.0*x94
    x186 = x185*x84
    x187 = x186*x57
    x188 = x187*x33
    x189 = x33*x88
    x190 = 2*x99
    x191 = x189*x190
    x192 = x161 + x163 + x165 + x167 + x174 + x184 + x188 + x191
    x193 = x0*x77
    x194 = 6.0*x193
    x195 = x194*x62
    x196 = r_cut*x194*x63 - r_cut*x195 - x104*x153 + x105*x151 - x106*x153 + x151*x23 + x159*x62 - x159*x63
    x197 = x196*x26
    x198 = x107*x162
    x199 = x164*x64
    x200 = x35*x57
    x201 = x173*x200
    x202 = x166*x64
    x203 = x183*x35
    x204 = x187*x35
    x205 = x35*x88
    x206 = x190*x205
    x207 = x197 + x198 + x199 + x201 + x202 + x203 + x204 + x206
    x208 = x170*x43
    x209 = x172*x208
    x210 = x172*x44
    x211 = x170*x210
    x212 = x186*x43
    x213 = x186*x44
    x214 = 16.0*x48
    x215 = r_cut*x214
    x216 = x104*x215 + x106*x215 + x118 - x120 - x62*x98 + x63*x98
    x217 = x122*x216
    x218 = -x124 - x125 - x215*x73 + x215*x74 + x47*x98 + x50*x98
    x219 = x127*x218
    x220 = x126*x42
    x221 = x220*x51
    x222 = x121*x42
    x223 = x222*x64
    x224 = x121*x205
    x225 = x126*x189
    x226 = -x209 - x211 - x212 - x213 - x217 - x219 - x221 - x223 - 2*x224 - 2*x225
    x227 = x115*x226
    x228 = -x101*x68 + x103*x192 + x108*x61 + x109*x61 + x110*x61 + x111*x61 - x113*x207 + x114*x149 + x114*x227 - x131*x149 - x131*x227 - x135*x136 - x135*x138 + x137*x65 + x137*x66 - x139*x140 + x139*x141 + x139*x142 - x139*x143 + x139*x144 - x139*x145 - x68*x81 - x68*x83 - x68*x90
    x229 = 3*x46
    x230 = x112*x229
    x231 = x102*x229
    x232 = x51*x58
    x233 = 6*x46
    x234 = x58*x64
    x235 = 3*x130
    x236 = x235*x67
    x237 = x235*x60
    x238 = 6*x130
    x239 = x102*x238
    x240 = 3*x149
    x241 = x207*x229
    x242 = x192*x229
    x243 = x114*x146
    x244 = x129*(-3*x116 - 3*x117 - 3*x123 - 3*x128)/pow(x45, 4)
    x245 = x131*x146
    x246 = 3*x227
    x247 = x148*(-2*x209 - 2*x211 - 2*x212 - 2*x213 - 2*x217 - 2*x219 - 2*x221 - 2*x223 - 4*x224 - 4*x225)
    x248 = 2*x147*x226
    x249 = 4*x58
    x250 = r_cut*x77
    x251 = 48.0*x73
    x252 = 48.0*x74
    x253 = x15*x156
    x254 = 36.0*x253
    x255 = pow(r_cut, 4)
    x256 = pow(x18, -7/2)
    x257 = x255*x256
    x258 = 30.0*x257
    x259 = x0*x50
    x260 = 6*x89
    x261 = 6*x100
    x262 = 4*x173*x57
    x263 = 4*x183
    x264 = x51*x88
    x265 = 8*x99
    x266 = 4*x187
    x267 = x214*x85
    x268 = 16.0*r_cut*x0*x24*x48*x7 - r_cut*x267
    x269 = pow(x25, -5)
    x270 = x269*x87
    x271 = x268*x270
    x272 = x168*x170
    x273 = 48.0*x93
    x274 = 24.0*x77
    x275 = x180*x274
    x276 = -16.0*e*r_cut*x91*x96 + 48.0*e*x155*x16*x176 + 128.0*e*x155*x176*x95 + 16.0*e*x155*x176*x96 + 24.0*r_cut*x*x0*x22*x77 - r_cut*x273 - r_cut*x275 + 24.0*x0*x155*x156*x24*x7 - 24.0*x157*x85 - 128.0*x178
    x277 = x276*x84
    x278 = x277*x57
    x279 = 3*x182
    x280 = -24.0*e*x15*x91*x96 + 12.0*x*x0*x15*x22*x77 + 12.0*x0*x24*x48*x7 - x15*x175 - x15*x181 - x169
    x281 = x172*x280
    x282 = 3*x173
    x283 = x282*x99
    x284 = x171*x185
    x285 = 2*x284
    x286 = pow(x18, -3)
    x287 = e*x255*x286
    x288 = x16*x287
    x289 = x287*x95
    x290 = 72.0*x253
    x291 = 60.0*x257
    x292 = 144.0*e*x15*x16*x176 + 480.0*e*x15*x176*x95 + 24.0*e*x15*x176*x96 - 24.0*e*x255*x286*x96 + 60.0*x*x0*x22*x255*x256 + 12.0*x*x0*x22*x77 + 72.0*x0*x15*x156*x24*x7 - x175 - 96.0*x177 - x180*x291 - x181 - 120.0*x288 - 384.0*x289 - x290*x85
    x293 = 3*x186
    x294 = x293*x99
    x295 = x170*x200
    x296 = x64*x88
    x297 = x208*x271
    x298 = x170*x44
    x299 = x271*x298
    x300 = x277*x43
    x301 = x277*x44
    x302 = 24.0*x48
    x303 = x15*x274
    x304 = 24.0*e*x*x10*x15*x7*x77*x9 + 24.0*e*x*x29*x48 + 12.0*r_cut*x*x0*x32*x77 + 12.0*r_cut*x0*x31*x7*x77 - x154*x179 - x179*x259 - x302*x73 - x303*x74
    x305 = x127*x304
    x306 = 12.0*x193
    x307 = x306*x62
    x308 = x0*x179
    x309 = r_cut*x306*x63 - r_cut*x307 + x104*x302 - x104*x303 + x106*x302 - x106*x303 + x308*x62 - x308*x63
    x310 = x122*x309
    x311 = x220*x80
    x312 = x42*x51
    x313 = x218*x312
    x314 = x107*x222
    x315 = x42*x64
    x316 = x216*x315
    x317 = x281*x43
    x318 = x208*x284
    x319 = x210*x280
    x320 = x284*x298
    x321 = x205*x216
    x322 = x189*x218
    x323 = x126*x264
    x324 = x121*x296
    x325 = x121*x35
    x326 = x126*x33
    x327 = x115*(-x282*x325 - x282*x326 - x293*x325 - x293*x326 - x297 - x299 - x300 - x301 - x305 - x310 - x311 - 2*x313 - x314 - 2*x316 - x317 - 2*x318 - x319 - 2*x320 - 3*x321 - 3*x322 - 3*x323 - 3*x324)
    x328 = r_cut*x134
    x329 = log(sqrt(x45))
    x330 = x39*x4
    x331 = (1/2)*x116 + (1/2)*x117 + (1/2)*x123 + (1/2)*x128
    x332 = x331*x46
    x333 = x38*x70
    x334 = 12*x333
    x335 = x130*x331
    x336 = 12*x133
    x337 = 4*x134
    x338 = x149*x331
    x339 = r_cut*x333
    x340 = 4*x339
    x341 = (1/2)*x209 + (1/2)*x211 + (1/2)*x212 + (1/2)*x213 + (1/2)*x217 + (1/2)*x219 + (1/2)*x221 + (1/2)*x223 + x224 + x225
    x342 = x341*x46
    x343 = x328*x331
    x344 = x146*x343
    x345 = 8*x130*x341
    x346 = x227*x331
    x347 = x328*x341
    x348 = (3/2)*x173
    x349 = (3/2)*x186
    x350 = (1/2)*x297 + (1/2)*x299 + (1/2)*x300 + (1/2)*x301 + (1/2)*x305 + (1/2)*x310 + (1/2)*x311 + x313 + (1/2)*x314 + x316 + (1/2)*x317 + x318 + (1/2)*x319 + x320 + (3/2)*x321 + (3/2)*x322 + (3/2)*x323 + (3/2)*x324 + x325*x348 + x325*x349 + x326*x348 + x326*x349
    x351 = x350*x46
    x352 = (3/2)*x42
    x353 = (1/2)*x208
    x354 = x268*x87*(20.0*r_cut*x0*x24*x48*x7 - 20.0*r_cut*x48*x85)/pow(x25, 6)
    x355 = (1/2)*x298
    x356 = (3/2)*x208
    x357 = x171*x276
    x358 = 192.0*x177
    x359 = -24.0*e*r_cut*x91*x96 + 72.0*e*x155*x16*x176 + 192.0*e*x155*x176*x95 + 24.0*e*x155*x176*x96 + 36.0*r_cut*x*x0*x22*x77 - r_cut*x358 - 72.0*r_cut*x93 + 36.0*x0*x155*x156*x24*x7 - 36.0*x157*x85 - 36.0*x180*x250
    x360 = (1/2)*x43
    x361 = (3/2)*x298
    x362 = 96.0*x73
    x363 = 96.0*x74
    x364 = 2*x88
    x365 = x280*x43
    x366 = x185*x268*x269
    x367 = x270*(-32.0*e*x15*x91*x96 + 16.0*x*x0*x15*x22*x77 + 16.0*x0*x24*x48*x7 - 16.0*x180*x78 - x267 - 32.0*x94)
    x368 = x280*x44
    x369 = x84*(288.0*e*x15*x16*x176 + 960.0*e*x15*x176*x95 + 48.0*e*x15*x176*x96 - 48.0*e*x255*x286*x96 + 120.0*x*x0*x22*x255*x256 + 24.0*x*x0*x22*x77 + 144.0*x0*x15*x156*x24*x7 - 120.0*x180*x257 - 144.0*x253*x85 - x273 - x275 - 240.0*x288 - 768.0*x289 - x358)
    x370 = x216*x35
    x371 = x218*x33
    x372 = x126*x51
    x373 = x121*x64
    x374 = (3/2)*x284
    x375 = x170*x325
    x376 = 2*x271
    x377 = x170*x326
    x378 = 2*x277
    x379 = 4*x284
    x380 = 2*x281
    return [4*r_cut*x1*x2*x228*x70 + 24*r_cut*x1*x2*x4*x69 + 12*x1*x132*x2*x70 + 24*x1*x2*x37*x4 - 12*x132*x133 - 4*x134*x228 - x328*(-x101*x230 - x101*x236 + x102*x233*x234 + x103*(x127*x292 + x160*x249 + x168*x281 + x189*x279 + x26*(-x154*x254 + x154*x258 - x157*x251 + x157*x252 + x194*x47 + x194*x50 + x250*x251 - x250*x252 - x254*x259 + x258*x259) + x260*x80 + x261*x80 + x262*x51 + x263*x51 + x264*x265 + x266*x51 + x271*x272 + x272*x285 + x278*x33 + x283*x33 + x294*x33) + x108*x231 + x108*x237 + x110*x231 + x110*x237 + x111*x231 + x111*x237 - x112*x232*x233 - x113*(x107*x260 + x107*x261 + x122*x292 + x196*x249 + x200*x281 + x205*x279 + x26*(48.0*e*x10*x155*x156*x16*x9 + 48.0*e*x155*x156*x29*x7 + 36.0*x*x0*x15*x156*x31 - x0*x254*x63 + 30.0*x0*x255*x256*x32*x7 - x0*x258*x62 + 6.0*x0*x32*x7*x77 - 48.0*x104*x250 - 48.0*x106*x250 - x195) + x262*x64 + x263*x64 + x265*x296 + x266*x64 + x271*x295 + x278*x35 + x283*x35 + x285*x295 + x294*x35) + x114*x247 + x114*x327 - x131*x247 - x131*x327 - x136*x238 - x138*x238 - x140*x240 - x140*x246 + x141*x240 + x141*x246 + x142*x240 + x142*x246 - x143*x240 - x143*x246 + x144*x240 + x144*x246 - x145*x240 - x145*x246 - x161*x68 - x163*x68 - x165*x68 - x167*x68 - x174*x68 - x184*x68 - x188*x68 - x191*x68 + x192*x235*x36 + x197*x61 + x198*x61 + x199*x61 + x201*x61 + x202*x61 + x203*x61 + x204*x61 + x206*x61 - x207*x235*x34 - x230*x81 - x230*x90 - x232*x238*x67 + x234*x238*x60 - x236*x81 - x236*x90 + x239*x65 + x239*x66 - x241*x52 - x241*x59 + x242*x65 + x242*x66 + x243*x244 + x243*x248 - x244*x245 - x245*x248) - x37*x40 - x39*x41*x69, -r_cut*x330*x332 + x134*x345 + x235*x328*x350 + x240*x347 + x244*x344 + x246*x347 + x247*x343 + x248*x344 + x327*x343 + x328*x46*(x107*x121*x364 + x107*x216*x352 + (1/2)*x122*(96.0*e*x10*x155*x156*x16*x9 + 96.0*e*x155*x156*x29*x7 + 72.0*x*x0*x15*x156*x31 + 60.0*x0*x255*x256*x32*x7 - x0*x290*x63 - x0*x291*x62 + 12.0*x0*x32*x7*x77 - 96.0*x104*x250 - 96.0*x106*x250 - x307) + x126*x364*x80 + (1/2)*x127*(-x154*x290 + x154*x291 - x157*x362 + x157*x363 + x250*x362 - x250*x363 - x259*x290 + x259*x291 + x306*x47 + x306*x50) + (1/2)*x160*x220 + x172*x359*x360 + 2*x189*x304 + (1/2)*x196*x222 + 2*x205*x309 + (1/2)*x210*x359 + 4*x216*x296 + 4*x218*x264 + x218*x352*x80 + x271*x365 + x271*x368 + x282*x370 + x282*x371 + x282*x372 + x282*x373 + x293*x370 + x293*x371 + x293*x372 + x293*x373 + (3/2)*x304*x312 + (3/2)*x309*x315 + x325*x378 + x325*x380 + x326*x378 + x326*x380 + x353*x354 + x353*x367 + x354*x355 + x355*x367 + x356*x357 + x356*x366 + x357*x361 + x360*x369 + x361*x366 + x365*x374 + x368*x374 + (1/2)*x369*x44 + x375*x376 + x375*x379 + x376*x377 + x377*x379) - x329*x330 + x329*x40 + x332*x39*x41 - x334*x335 - x334*x342 + x335*x336 + x336*x342 + x337*x338 + x337*x346 + x337*x351 - x338*x340 - x339*x345 - x340*x346 - x340*x351]


@tensorflow.function
def deflection_5(x, y, e, r_core, r_cut):
    x0 = -y
    x1 = sqrt(e)
    x2 = r_core*x1
    x3 = x0 + 2.0*x2
    x4 = e + 1
    x5 = pow(x4, -1)
    x6 = 1 - e
    x7 = x5*x6
    x8 = x*x7
    x9 = x3*x8
    x10 = -x4*y/x6
    x11 = pow(r_cut, 2)
    x12 = pow(x, 2)
    x13 = x12/pow(e + 1.0, 2) + pow(y, 2)/pow(1.0 - e, 2)
    x14 = x11 + x13
    x15 = sqrt(x14)
    x16 = 2.0*x1
    x17 = x10 + x15*x16
    x18 = x*x17 + x9
    x19 = x12*x7
    x20 = -x17*x3 + x19
    x21 = pow(x18, 2) + pow(x20, 2)
    x22 = pow(x21, -1)
    x23 = r_cut*x16
    x24 = x0 + x23
    x25 = x10 + x16*sqrt(pow(r_core, 2) + x13)
    x26 = x*x25
    x27 = x24*x8 + x26
    x28 = x19 - x24*x25
    x29 = -x18*x28 + x20*x27
    x30 = x22*x29
    x31 = x18*x27 + x20*x28
    x32 = x22*x31
    x33 = atan2(x30, x32)
    x34 = -r_core + r_cut
    x35 = pow(x1, -1)
    x36 = 0.5*pow(e, 2) - 0.5
    x37 = x35*x36
    x38 = 120*x37
    x39 = x38/pow(x34, 5)
    x40 = pow(x34, -6)
    x41 = pow(x34, -4)
    x42 = pow(x21, -2)
    x43 = pow(x31, 2)
    x44 = pow(x29, 2)
    x45 = x42*x43 + x42*x44
    x46 = pow(x45, -1)
    x47 = x*x28
    x48 = pow(x15, -1)
    x49 = x23*x48
    x50 = x27*x49
    x51 = 2.0*x*x1*x20*x5*x6 + 2.0*x1*x18*x25 - x3*x50 - x47*x49
    x52 = x22*x51
    x53 = 4.0*x1
    x54 = x48*x53
    x55 = x*x18
    x56 = x54*x55
    x57 = 4.0*r_cut*x1*x20*x3*x48 - r_cut*x56
    x58 = x29*x42
    x59 = x57*x58
    x60 = x52 + x59
    x61 = x46*x60
    x62 = x28*x3
    x63 = x*x50 + x16*x18*x8 - x16*x20*x25 - x49*x62
    x64 = x22*x63
    x65 = x31*x42
    x66 = x57*x65
    x67 = x64 + x66
    x68 = x46*x67
    x69 = -x30*x68 + x32*x61
    x70 = r_cut*x39
    x71 = x37/pow(x34, 3)
    x72 = 8.0*x48
    x73 = r_cut*x72
    x74 = e*x9
    x75 = e*x26
    x76 = x16*x48
    x77 = pow(x14, -3/2)
    x78 = x11*x77
    x79 = x16*x78
    x80 = x27*x76
    x81 = x27*x79
    x82 = -x3*x80 + x3*x81 - x47*x76 + x47*x79 - x73*x74 + x73*x75
    x83 = x22*x82
    x84 = x42*x51
    x85 = 2*x57
    x86 = x84*x85
    x87 = pow(x21, -3)
    x88 = x1*x55
    x89 = x72*x88
    x90 = 8.0*r_cut*x1*x20*x3*x48 - r_cut*x89
    x91 = x87*x90
    x92 = x57*x91
    x93 = x29*x92
    x94 = pow(x14, -1)
    x95 = e*x94
    x96 = x12*x95
    x97 = x11*x96
    x98 = pow(x2 - 0.5*y, 2)
    x99 = 4.0*x98
    x100 = x20*x3
    x101 = x53*x78
    x102 = -8.0*e*x11*x94*x99 + 4.0*x*x1*x11*x18*x77 + 4.0*x1*x20*x3*x48 - x100*x101 - x56 - 8.0*x97
    x103 = x102*x58
    x104 = x103 + x83 + x86 + x93
    x105 = x32*x46
    x106 = e*x19
    x107 = x25*x3
    x108 = e*x107
    x109 = x*x80 - x*x81 + x106*x73 + x108*x73 - x62*x76 + x62*x79
    x110 = x109*x22
    x111 = x42*x63
    x112 = x111*x85
    x113 = x31*x92
    x114 = x102*x65
    x115 = x110 + x112 + x113 + x114
    x116 = x30*x46
    x117 = pow(x45, -2)
    x118 = x43*x91
    x119 = x44*x91
    x120 = x27*x54
    x121 = x*x120
    x122 = x54*x62
    x123 = r_cut*x121 - r_cut*x122 + x18*x53*x8 - x20*x25*x53
    x124 = x123*x65
    x125 = x47*x54
    x126 = x120*x3
    x127 = -r_cut*x125 - r_cut*x126 + 4.0*x*x1*x20*x5*x6 + 4.0*x1*x18*x25
    x128 = x127*x58
    x129 = -x118 - x119 - x124 - x128
    x130 = x117*x129
    x131 = x32*x60
    x132 = x30*x67
    x133 = x104*x105 - x115*x116 + x130*x131 - x130*x132 - x52*x68 - x59*x68 + x61*x64 + x61*x66
    x134 = pow(x34, -2)
    x135 = 2*x46
    x136 = x115*x52
    x137 = x104*x64
    x138 = x104*x66
    x139 = x115*x59
    x140 = 2*x130
    x141 = x52*x67
    x142 = x60*x64
    x143 = x60*x66
    x144 = x59*x67
    x145 = x104*x32
    x146 = x115*x30
    x147 = -2*x118 - 2*x119 - 2*x124 - 2*x128
    x148 = pow(x45, -3)
    x149 = x129*x148
    x150 = x147*x149
    x151 = 12.0*x48
    x152 = e*x151
    x153 = 12.0*x78
    x154 = pow(r_cut, 3)
    x155 = pow(x14, -5/2)
    x156 = x154*x155
    x157 = 6.0*x156
    x158 = x1*x157
    x159 = x1*x27
    x160 = x159*x3
    x161 = 12.0*e*x*x11*x3*x5*x6*x77 + 12.0*e*x*x25*x48 + 6.0*r_cut*x*x1*x28*x77 + 6.0*r_cut*x1*x27*x3*x77 - x152*x9 - x153*x75 - x157*x160 - x158*x47
    x162 = x161*x22
    x163 = x42*x57
    x164 = 3*x163
    x165 = x164*x82
    x166 = 3*x92
    x167 = x166*x51
    x168 = 3*x102
    x169 = x168*x84
    x170 = x151*x88
    x171 = 12.0*r_cut*x1*x20*x3*x48 - r_cut*x170
    x172 = pow(x21, -4)
    x173 = x172*x90
    x174 = x173*x57
    x175 = x174*x29
    x176 = x171*x175
    x177 = 24.0*x96
    x178 = pow(x14, -2)
    x179 = x95*x98
    x180 = r_cut*x179
    x181 = 12.0*x156
    x182 = x1*x77
    x183 = 12.0*x182
    x184 = x100*x183
    x185 = -8.0*e*r_cut*x94*x99 + 24.0*e*x12*x154*x178 + 64.0*e*x154*x178*x98 + 8.0*e*x154*x178*x99 + 12.0*r_cut*x*x1*x18*x77 - r_cut*x177 - r_cut*x184 + 12.0*x1*x154*x155*x20*x3 - 64.0*x180 - x181*x88
    x186 = x185*x58
    x187 = x11*x182
    x188 = -16.0*e*x11*x94*x99 + 8.0*x*x1*x11*x18*x77 + 8.0*x1*x20*x3*x48 - 8.0*x100*x187 - x89 - 16.0*x97
    x189 = x188*x87
    x190 = x189*x57
    x191 = x190*x29
    x192 = x29*x91
    x193 = 2*x102
    x194 = x192*x193
    x195 = x162 + x165 + x167 + x169 + x176 + x186 + x191 + x194
    x196 = 6.0*x182
    x197 = x196*x27
    x198 = x*x197
    x199 = x*x159
    x200 = r_cut*x196*x62 - r_cut*x198 - x106*x153 + x107*x152 - x108*x153 + x152*x19 + x157*x199 - x158*x62
    x201 = x200*x22
    x202 = x109*x164
    x203 = x166*x63
    x204 = x174*x31
    x205 = x171*x204
    x206 = x111*x168
    x207 = x185*x65
    x208 = x190*x31
    x209 = x31*x91
    x210 = x193*x209
    x211 = x201 + x202 + x203 + x205 + x206 + x207 + x208 + x210
    x212 = x173*x43
    x213 = x171*x212
    x214 = x173*x44
    x215 = x171*x214
    x216 = x189*x43
    x217 = x189*x44
    x218 = 16.0*x48
    x219 = r_cut*x218
    x220 = x101*x27
    x221 = -x*x220 + x101*x62 + x106*x219 + x108*x219 + x121 - x122
    x222 = x221*x65
    x223 = x101*x47 - x125 - x126 - x219*x74 + x219*x75 + x220*x3
    x224 = x223*x58
    x225 = x127*x42
    x226 = x225*x51
    x227 = x123*x42
    x228 = x227*x63
    x229 = x123*x209
    x230 = x127*x192
    x231 = -x213 - x215 - x216 - x217 - x222 - x224 - x226 - x228 - 2*x229 - 2*x230
    x232 = x117*x231
    x233 = -x103*x68 + x105*x195 + x110*x61 + x112*x61 + x113*x61 + x114*x61 - x116*x211 + x131*x150 + x131*x232 - x132*x150 - x132*x232 - x135*x136 + x135*x137 + x135*x138 - x135*x139 - x140*x141 + x140*x142 + x140*x143 - x140*x144 + x140*x145 - x140*x146 - x68*x83 - x68*x86 - x68*x93
    x234 = r_cut*x71
    x235 = x37/x34
    x236 = 3*x46
    x237 = x115*x83
    x238 = x104*x236
    x239 = 6*x46
    x240 = x239*x57
    x241 = x115*x84
    x242 = x104*x111
    x243 = x115*x236
    x244 = 3*x67
    x245 = x130*x244
    x246 = 3*x60
    x247 = x110*x130
    x248 = 6*x130
    x249 = x248*x57
    x250 = x67*x84
    x251 = x111*x60
    x252 = x130*x246
    x253 = x244*x52
    x254 = x246*x64
    x255 = x246*x66
    x256 = x244*x59
    x257 = x211*x236
    x258 = x195*x236
    x259 = 3*x32
    x260 = 3*x30
    x261 = x131*x147
    x262 = -3*x118 - 3*x119 - 3*x124 - 3*x128
    x263 = pow(x45, -4)
    x264 = x129*x263
    x265 = x262*x264
    x266 = x132*x147
    x267 = x130*x195
    x268 = x130*x211
    x269 = x104*x232
    x270 = x115*x232
    x271 = -2*x213 - 2*x215 - 2*x216 - 2*x217 - 2*x222 - 2*x224 - 2*x226 - 2*x228 - 4*x229 - 4*x230
    x272 = x149*x271
    x273 = x148*x231
    x274 = 2*x273
    x275 = 4*x163
    x276 = x161*x275
    x277 = r_cut*x77
    x278 = 48.0*x277
    x279 = 48.0*x156
    x280 = 48.0*x75
    x281 = x1*x47
    x282 = x11*x155
    x283 = 36.0*x282
    x284 = pow(r_cut, 4)
    x285 = pow(x14, -7/2)
    x286 = x284*x285
    x287 = 30.0*x286
    x288 = x156*x280 - x160*x283 + x160*x287 + x196*x47 + x197*x3 - x277*x280 + x278*x74 - x279*x74 - x281*x283 + x281*x287
    x289 = x22*x288
    x290 = 6*x82
    x291 = x290*x92
    x292 = x102*x42
    x293 = x290*x292
    x294 = x174*x51
    x295 = 4*x171
    x296 = x294*x295
    x297 = 4*x185
    x298 = x297*x84
    x299 = x51*x91
    x300 = 8*x102
    x301 = x299*x300
    x302 = 4*x190
    x303 = x302*x51
    x304 = x171*x29
    x305 = x218*x88
    x306 = 16.0*r_cut*x1*x20*x3*x48 - r_cut*x305
    x307 = pow(x21, -5)
    x308 = x307*x90
    x309 = x306*x308
    x310 = x309*x57
    x311 = x304*x310
    x312 = 48.0*x96
    x313 = 24.0*x100*x182
    x314 = -16.0*e*r_cut*x94*x99 + 48.0*e*x12*x154*x178 + 128.0*e*x154*x178*x98 + 16.0*e*x154*x178*x99 + 24.0*r_cut*x*x1*x18*x77 - r_cut*x312 - r_cut*x313 + 24.0*x1*x154*x155*x20*x3 - 24.0*x156*x88 - 128.0*x180
    x315 = x314*x87
    x316 = x315*x57
    x317 = x29*x316
    x318 = 3*x185
    x319 = x192*x318
    x320 = -24.0*e*x11*x94*x99 + 12.0*x*x1*x11*x18*x77 + 12.0*x1*x20*x3*x48 - x11*x177 - x11*x184 - x170
    x321 = x29*x320
    x322 = x174*x321
    x323 = x168*x173
    x324 = x304*x323
    x325 = x172*x188
    x326 = x325*x85
    x327 = x304*x326
    x328 = e*x12
    x329 = pow(x14, -3)
    x330 = x284*x329
    x331 = x328*x330
    x332 = e*x98
    x333 = x330*x332
    x334 = 72.0*x282
    x335 = x1*x100
    x336 = 60.0*x286
    x337 = 144.0*e*x11*x12*x178 + 480.0*e*x11*x178*x98 + 24.0*e*x11*x178*x99 - 24.0*e*x284*x329*x99 + 60.0*x*x1*x18*x284*x285 + 12.0*x*x1*x18*x77 + 72.0*x1*x11*x155*x20*x3 - x177 - 96.0*x179 - x184 - 120.0*x331 - 384.0*x333 - x334*x88 - x335*x336
    x338 = x337*x58
    x339 = x168*x189
    x340 = x29*x339
    x341 = x276 + x289 + x291 + x293 + x296 + x298 + x301 + x303 + x311 + x317 + x319 + x322 + x324 + x327 + x338 + x340
    x342 = x200*x275
    x343 = x1*x62
    x344 = 48.0*e*x12*x154*x155*x5*x6 + 48.0*e*x154*x155*x25*x3 + 36.0*x*x1*x11*x155*x27 + 30.0*x1*x28*x284*x285*x3 + 6.0*x1*x28*x3*x77 - x106*x278 - 48.0*x108*x277 - x198 - x199*x287 - x283*x343
    x345 = x22*x344
    x346 = 6*x109
    x347 = x346*x92
    x348 = x292*x346
    x349 = x174*x63
    x350 = x295*x349
    x351 = x111*x297
    x352 = x171*x31
    x353 = x310*x352
    x354 = x63*x91
    x355 = x300*x354
    x356 = x302*x63
    x357 = x31*x316
    x358 = x209*x318
    x359 = x204*x320
    x360 = x323*x352
    x361 = x326*x352
    x362 = x337*x65
    x363 = x31*x339
    x364 = x342 + x345 + x347 + x348 + x350 + x351 + x353 + x355 + x356 + x357 + x358 + x359 + x360 + x361 + x362 + x363
    x365 = x171*x43
    x366 = x306*x365
    x367 = x308*x366
    x368 = x171*x44
    x369 = x308*x368
    x370 = x306*x369
    x371 = x315*x43
    x372 = x315*x44
    x373 = 24.0*x48
    x374 = 24.0*x78
    x375 = 24.0*e*x*x11*x3*x5*x6*x77 + 24.0*e*x*x25*x48 + 12.0*r_cut*x*x1*x28*x77 + 12.0*r_cut*x1*x27*x3*x77 - x160*x181 - x181*x281 - x373*x74 - x374*x75
    x376 = x375*x58
    x377 = x183*x27
    x378 = x*x377
    x379 = r_cut*x183*x62 - r_cut*x378 + x106*x373 - x106*x374 + x108*x373 - x108*x374 + x181*x199 - x181*x343
    x380 = x379*x65
    x381 = x225*x82
    x382 = x223*x84
    x383 = x109*x227
    x384 = x111*x221
    x385 = x320*x43
    x386 = x173*x385
    x387 = x325*x365
    x388 = x214*x320
    x389 = x325*x368
    x390 = x209*x221
    x391 = x192*x223
    x392 = x127*x299
    x393 = x123*x354
    x394 = x123*x31
    x395 = x171*x173
    x396 = 3*x395
    x397 = x127*x29
    x398 = 3*x189
    x399 = -x367 - x370 - x371 - x372 - x376 - x380 - x381 - 2*x382 - x383 - 2*x384 - x386 - 2*x387 - x388 - 2*x389 - 3*x390 - 3*x391 - 3*x392 - 3*x393 - x394*x396 - x394*x398 - x396*x397 - x397*x398
    x400 = x117*x399
    x401 = -x103*x243 - x103*x245 + x104*x150*x259 + x105*x341 + x110*x238 + x113*x238 + x113*x252 + x114*x238 + x114*x252 - x115*x150*x260 - x116*x364 + x131*x272 + x131*x400 - x132*x272 - x132*x400 - x136*x248 + x137*x248 + x138*x248 - x139*x248 - x150*x253 + x150*x254 + x150*x255 - x150*x256 - x162*x68 - x165*x68 - x167*x68 - x169*x68 - x176*x68 - x186*x68 - x191*x68 - x194*x68 + x201*x61 + x202*x61 + x203*x61 + x205*x61 + x206*x61 + x207*x61 + x208*x61 + x210*x61 - x232*x253 + x232*x254 + x232*x255 - x232*x256 - x236*x237 - x240*x241 + x240*x242 - x243*x93 - x245*x83 - x245*x93 + x246*x247 - x249*x250 + x249*x251 - x257*x52 - x257*x59 + x258*x64 + x258*x66 + x259*x267 + x259*x269 - x260*x268 - x260*x270 + x261*x265 + x261*x274 - x265*x266 - x266*x274
    x402 = 4*x46
    x403 = x115*x402
    x404 = x104*x402
    x405 = x163*x82
    x406 = 12*x46
    x407 = x115*x406
    x408 = x104*x406
    x409 = x109*x163
    x410 = x51*x92
    x411 = x63*x92
    x412 = x102*x406
    x413 = x300*x46
    x414 = 4*x130
    x415 = x414*x67
    x416 = x414*x60
    x417 = 12*x130
    x418 = x417*x67
    x419 = x417*x60
    x420 = x102*x417
    x421 = x130*x300
    x422 = 24*x130*x57
    x423 = x104*x417
    x424 = x115*x417
    x425 = x67*x83
    x426 = 6*x150
    x427 = x110*x60
    x428 = 12*x150
    x429 = x428*x57
    x430 = x426*x60
    x431 = x426*x67
    x432 = x211*x239
    x433 = x195*x239
    x434 = x406*x57
    x435 = x141*x147
    x436 = 4*x265
    x437 = x147*x436
    x438 = 6*x232
    x439 = 12*x232
    x440 = x439*x57
    x441 = x438*x60
    x442 = x438*x67
    x443 = 12*x268
    x444 = 12*x267
    x445 = x129*x262*(-4*x118 - 4*x119 - 4*x124 - 4*x128)/pow(x45, 5)
    x446 = 8*x273
    x447 = 4*x272
    x448 = x147*x446
    x449 = x195*x32
    x450 = x211*x30
    x451 = x264*(-3*x213 - 3*x215 - 3*x216 - 3*x217 - 3*x222 - 3*x224 - 3*x226 - 3*x228 - 6*x229 - 6*x230)
    x452 = 3*x261
    x453 = x231*x262*x263
    x454 = x131*x271
    x455 = 2*x265
    x456 = 3*x266
    x457 = x132*x271
    x458 = x364*x402
    x459 = x341*x402
    x460 = 3*x273
    x461 = 4*x400
    x462 = 6*x395
    x463 = 6*x189
    x464 = x149*(-2*x367 - 2*x370 - 2*x371 - 2*x372 - 2*x376 - 2*x380 - 2*x381 - 4*x382 - 2*x383 - 4*x384 - 2*x386 - 4*x387 - 2*x388 - 4*x389 - 6*x390 - 6*x391 - 6*x392 - 6*x393 - x394*x462 - x394*x463 - x397*x462 - x397*x463)
    x465 = x148*x399
    x466 = 60.0*x77
    x467 = 300.0*x286
    x468 = x154*x285
    x469 = pow(r_cut, 5)
    x470 = pow(x14, -9/2)
    x471 = r_cut*x155
    x472 = 90.0*x471
    x473 = x469*x470
    x474 = 210.0*x473
    x475 = 10*x92
    x476 = 5*x163
    x477 = 10*x292
    x478 = 10*x171
    x479 = x174*x478
    x480 = 10*x185
    x481 = x109*x42
    x482 = 20*x102
    x483 = x109*x91
    x484 = 10*x190
    x485 = 5*x171
    x486 = x310*x485
    x487 = r_cut*x178
    x488 = x328*x487
    x489 = x154*x329
    x490 = x328*x489
    x491 = pow(x14, -4)
    x492 = x469*x491
    x493 = x328*x492
    x494 = x332*x487
    x495 = x332*x489
    x496 = x332*x492
    x497 = 180.0*x471
    x498 = 600.0*x468
    x499 = 420.0*x473
    x500 = 24.0*e*r_cut*x178*x99 - 144.0*e*x154*x329*x99 + 120.0*e*x469*x491*x99 + x335*x497 - x335*x498 + x335*x499 + 360.0*x488 - 1200.0*x490 + 840.0*x493 + 1344.0*x494 - 4224.0*x495 + 2880.0*x496 - x497*x88 + x498*x88 - x499*x88
    x501 = 15*x185
    x502 = 5*x316
    x503 = 20.0*x48*x88
    x504 = 20.0*r_cut*x1*x20*x3*x48 - r_cut*x503
    x505 = pow(x21, -6)
    x506 = x505*x90
    x507 = x504*x506
    x508 = x352*x57
    x509 = x306*x508
    x510 = 15*x102
    x511 = x395*x510
    x512 = x325*x478
    x513 = x512*x57
    x514 = 5*x320
    x515 = 5*x337
    x516 = 72.0*x96
    x517 = 192.0*x179
    x518 = 36.0*x100*x182
    x519 = -24.0*e*r_cut*x94*x99 + 72.0*e*x12*x154*x178 + 192.0*e*x154*x178*x98 + 24.0*e*x154*x178*x99 + 36.0*r_cut*x*x1*x18*x77 - r_cut*x516 - r_cut*x517 - r_cut*x518 + 36.0*x1*x154*x155*x20*x3 - 36.0*x156*x88
    x520 = 6*x173*x185
    x521 = x172*x314
    x522 = 3*x521
    x523 = -32.0*e*x11*x94*x99 + 16.0*x*x1*x11*x18*x77 + 16.0*x1*x20*x3*x48 - 16.0*x100*x187 - x305 - 32.0*x97
    x524 = x308*x523
    x525 = x189*x63
    x526 = x102*x309
    x527 = x188*x307
    x528 = 3*x527
    x529 = x31*x320
    x530 = x309*x85
    x531 = 288.0*e*x11*x12*x178 + 960.0*e*x11*x178*x98 + 48.0*e*x11*x178*x99 - 48.0*e*x284*x329*x99 + 120.0*x*x1*x18*x284*x285 + 24.0*x*x1*x18*x77 + 144.0*x1*x11*x155*x20*x3 - 144.0*x282*x88 - 120.0*x286*x335 - x312 - x313 - 240.0*x331 - 768.0*x333 - x517
    x532 = x531*x87
    x533 = x532*x57
    x534 = 4*x337
    x535 = 4*x315
    x536 = x102*x535
    x537 = x185*x463
    x538 = x300*x325
    x539 = 4*x173
    x540 = x102*x539
    x541 = 3*x325
    x542 = x541*x57
    x543 = x42*x82
    x544 = x82*x91
    x545 = x304*x57
    x546 = x306*x545
    x547 = x189*x51
    x548 = x161*x225
    x549 = x375*x84
    x550 = x200*x227
    x551 = x111*x379
    x552 = x223*x543
    x553 = x221*x481
    x554 = x366*x507
    x555 = x306*x368
    x556 = x507*x555
    x557 = x212*x519
    x558 = x214*x519
    x559 = x192*x375
    x560 = x209*x379
    x561 = 96.0*r_cut
    x562 = x561*x77
    x563 = 96.0*x156
    x564 = -x160*x334 + x160*x336 + x183*x47 - x281*x334 + x281*x336 + x3*x377 + x562*x74 - x562*x75 - x563*x74 + x563*x75
    x565 = x564*x58
    x566 = 96.0*e*x12*x154*x155*x5*x6 + 96.0*e*x154*x155*x25*x3 + 72.0*x*x1*x11*x155*x27 + 60.0*x1*x28*x284*x285*x3 + 12.0*x1*x28*x3*x77 - x106*x562 - x108*x562 - x199*x336 - x334*x343 - x378
    x567 = x566*x65
    x568 = x127*x544
    x569 = x223*x299
    x570 = x221*x354
    x571 = x123*x483
    x572 = x365*x524
    x573 = x309*x385
    x574 = x369*x523
    x575 = x320*x44
    x576 = x309*x575
    x577 = x43*x532
    x578 = x44*x532
    x579 = x221*x31
    x580 = x223*x29
    x581 = x127*x51
    x582 = x123*x63
    x583 = x295*x309
    x584 = x325*x394
    x585 = 8*x171
    x586 = x320*x394
    x587 = x325*x397
    x588 = x127*x321
    x589 = x117*(-x365*x522 - x366*x528 - x368*x522 - x385*x541 - x394*x535 - x394*x583 - x397*x535 - x397*x583 - x462*x579 - x462*x580 - x462*x581 - x462*x582 - x463*x579 - x463*x580 - x463*x581 - x463*x582 - x528*x555 - x539*x586 - x539*x588 - x541*x575 - x548 - 3*x549 - x550 - 3*x551 - 3*x552 - 3*x553 - x554 - x556 - x557 - x558 - 4*x559 - 4*x560 - x565 - x567 - 4*x568 - 8*x569 - 8*x570 - 4*x571 - x572 - 2*x573 - x574 - 2*x576 - x577 - x578 - x584*x585 - x585*x587)
    x590 = r_cut*x235
    x591 = log(sqrt(x45))
    x592 = (1/2)*x118 + (1/2)*x119 + (1/2)*x124 + (1/2)*x128
    x593 = x46*x592
    x594 = 60*x71
    x595 = x130*x592
    x596 = 60*r_cut*x37*x41
    x597 = x134*x37
    x598 = 20*x597
    x599 = x592*x598
    x600 = 20*x234
    x601 = x592*x600
    x602 = (1/2)*x213 + (1/2)*x215 + (1/2)*x216 + (1/2)*x217 + (1/2)*x222 + (1/2)*x224 + (1/2)*x226 + (1/2)*x228 + x229 + x230
    x603 = x46*x602
    x604 = 5*x235
    x605 = x147*x592
    x606 = x265*x605
    x607 = r_cut*x597
    x608 = 5*x607
    x609 = 40*x130*x602
    x610 = x590*x592
    x611 = x147*x610
    x612 = 15*x235
    x613 = x150*x602
    x614 = 15*x607
    x615 = 10*x273*x605
    x616 = x272*x592
    x617 = x590*x602
    x618 = 3*x611
    x619 = x271*x610
    x620 = x232*x602
    x621 = (3/2)*x395
    x622 = (3/2)*x189
    x623 = (1/2)*x367 + (1/2)*x370 + (1/2)*x371 + (1/2)*x372 + (1/2)*x376 + (1/2)*x380 + (1/2)*x381 + x382 + (1/2)*x383 + x384 + (1/2)*x386 + x387 + (1/2)*x388 + x389 + (3/2)*x390 + (3/2)*x391 + (3/2)*x392 + (3/2)*x393 + x394*x621 + x394*x622 + x397*x621 + x397*x622
    x624 = x46*x623
    x625 = x130*x623
    x626 = x400*x592
    x627 = x590*x623
    x628 = (3/2)*x521
    x629 = (3/2)*x527
    x630 = (3/2)*x325
    x631 = x171*x394
    x632 = 2*x309
    x633 = x171*x397
    x634 = 2*x315
    x635 = 2*x173
    x636 = x295*x584 + x295*x587 + x365*x628 + x366*x629 + x368*x628 + x385*x630 + x394*x634 + x396*x579 + x396*x580 + x396*x581 + x396*x582 + x397*x634 + x398*x579 + x398*x580 + x398*x581 + x398*x582 + (1/2)*x548 + (3/2)*x549 + (1/2)*x550 + (3/2)*x551 + (3/2)*x552 + (3/2)*x553 + (1/2)*x554 + x555*x629 + (1/2)*x556 + (1/2)*x557 + (1/2)*x558 + 2*x559 + 2*x560 + (1/2)*x565 + (1/2)*x567 + 2*x568 + 4*x569 + 4*x570 + 2*x571 + (1/2)*x572 + x573 + (1/2)*x574 + x575*x630 + x576 + (1/2)*x577 + (1/2)*x578 + x586*x635 + x588*x635 + x631*x632 + x632*x633
    x637 = x46*x636
    x638 = 2*x42
    x639 = 360.0*x471
    x640 = 1200.0*x468
    x641 = 840.0*x473
    x642 = (1/2)*x87*(48.0*e*r_cut*x178*x99 - 288.0*e*x154*x329*x99 + 240.0*e*x469*x491*x99 + x335*x639 - x335*x640 + x335*x641 + 720.0*x488 - 2400.0*x490 + 1680.0*x493 + 2688.0*x494 - 8448.0*x495 + 5760.0*x496 - x639*x88 + x640*x88 - x641*x88)
    x643 = 120.0*x77
    x644 = 600.0*x286
    x645 = (5/2)*x91
    x646 = (1/2)*x366
    x647 = x504*x90*(24.0*r_cut*x1*x20*x3*x48 - r_cut*x373*x88)/pow(x21, 7)
    x648 = (1/2)*x555
    x649 = 3*x307*x314
    x650 = x43*x519
    x651 = (3/2)*x309
    x652 = -16.0*e*r_cut*x94*x99 + 48.0*e*x12*x154*x178 + 128.0*e*x154*x178*x98 + 16.0*e*x154*x178*x99 + 24.0*r_cut*x*x1*x18*x77 - 24.0*r_cut*x100*x182 + 24.0*x1*x154*x155*x20*x3 - 128.0*x180 - 1/2*x279*x88 - 1/2*x561*x96
    x653 = x44*x519
    x654 = x29*x375
    x655 = 5*x395
    x656 = x31*x379
    x657 = x127*x82
    x658 = 10*x223
    x659 = 10*x221
    x660 = x109*x123
    x661 = x507*x523
    x662 = x188*x504*x505
    x663 = x306*x385
    x664 = (3/2)*x507
    x665 = x506*(-40.0*e*x11*x94*x99 + 20.0*x*x1*x11*x18*x77 + 20.0*x1*x20*x3*x48 - 20.0*x100*x187 - x503 - 40.0*x97)
    x666 = 2*x368
    x667 = x306*x575
    x668 = 2*x365
    x669 = x172*x531
    x670 = 216.0*e*x11*x12*x178 + 720.0*e*x11*x178*x98 + 36.0*e*x11*x178*x99 - 36.0*e*x284*x329*x99 + 90.0*x*x1*x18*x284*x285 + 18.0*x*x1*x18*x77 + 108.0*x1*x11*x155*x20*x3 - 144.0*x179 - 108.0*x282*x88 - 90.0*x286*x335 - 180.0*x331 - 576.0*x333 - 1/2*x516 - 1/2*x518
    x671 = 2*x325
    x672 = 5*x189
    x673 = x309*x485
    x674 = 5*x315
    x675 = 4*x527
    x676 = x523*x527
    x677 = (3/2)*x524
    x678 = x173*x514
    x679 = (5/2)*x394
    x680 = x171*x306*x507
    x681 = (5/2)*x397
    x682 = (15/2)*x521
    x683 = x173*x519
    x684 = (15/2)*x306*x527
    x685 = x171*x524
    x686 = (5/2)*x532
    return [60*r_cut*x133*x35*x36*x41 + 5*r_cut*x134*x35*x36*x401 + 120*r_cut*x33*x35*x36*x40 - 60*x133*x71 + 20*x134*x233*x35*x36 - 20*x233*x234 - 5*x235*x401 - x33*x39 + 120*x35*x36*x41*x69 - x590*(-x103*x424 - x103*x431 - x103*x432 - x103*x442 + x104*x209*x413 + 12*x104*x247 + x105*(x161*x475 + x161*x477 + x175*x519 + x192*x534 + x22*(360.0*e*x*x11*x155*x25 + 300.0*e*x*x284*x285*x3*x5*x6 + 60.0*e*x*x3*x5*x6*x77 + 300.0*x*x1*x154*x28*x285 + 300.0*x1*x154*x27*x285*x3 - x160*x472 - x160*x474 - x281*x472 - x281*x474 - 360.0*x282*x74 - x466*x75 - x467*x75) + x288*x476 + x29*x533 + x29*x536 + x29*x537 + x294*x514 + x299*x501 + x304*x520 + 4*x304*x526 + x304*x538 + x321*x530 + x321*x540 + x321*x542 + x479*x82 + x480*x543 + x482*x544 + x484*x82 + x486*x51 + x500*x58 + x502*x51 + x507*x546 + x51*x511 + x51*x513 + x510*x547 + x515*x84 + x522*x545 + x524*x545 + x528*x546) + x110*x433 + x111*x195*x434 + x113*x423 + x113*x430 + x113*x433 + x113*x441 + x114*x423 + x114*x430 + x114*x433 + x114*x441 - x115*x192*x413 - x116*(x109*x479 + x109*x484 + x111*x515 + x200*x475 + x200*x477 + x204*x519 + x209*x534 + x22*(360.0*e*x11*x12*x155*x5*x6 + 360.0*e*x11*x155*x25*x3 + 90.0*r_cut*x*x1*x155*x27 + 210.0*x*x1*x27*x469*x470 + 300.0*x1*x154*x28*x285*x3 - x106*x466 - x106*x467 - x108*x466 - x108*x467 - 300.0*x199*x468 - x343*x472 - x343*x474) + x295*x31*x526 + x31*x533 + x31*x536 + x31*x537 + x344*x476 + x349*x514 + x352*x520 + x352*x538 + x354*x501 + x480*x481 + x482*x483 + x486*x63 + x500*x65 + x502*x63 + x507*x509 + x508*x522 + x508*x524 + x509*x528 + x510*x525 + x511*x63 + x513*x63 + x529*x530 + x529*x540 + x529*x542) + x131*x464 + x131*x589 - x132*x464 - x132*x589 - x136*x428 - x136*x439 + x137*x428 + x137*x439 + x138*x428 - x139*x428 - x141*x447 - x141*x461 + x142*x437 + x142*x447 + x142*x448 + x142*x461 + x143*x437 + x143*x447 + x143*x448 + x143*x461 - x144*x437 - x144*x447 - x144*x448 - x144*x461 + x145*x437 + x145*x447 + x145*x448 + x145*x461 - x146*x437 - x146*x447 - x146*x448 - x146*x461 - x162*x403 - x162*x415 - x176*x403 - x176*x415 - x186*x403 - x186*x415 - x191*x403 - x191*x415 - x192*x421*x67 + x201*x404 + x201*x416 + x205*x404 + x205*x416 + x207*x404 + x207*x416 + x208*x404 + x208*x416 + x209*x421*x60 - x211*x434*x84 - x237*x417 - x241*x412 - x241*x422 + x242*x412 + x242*x422 - x250*x420 - x250*x429 - x250*x440 + x251*x420 + x251*x429 + x251*x440 + x261*x445 + x261*x451 - x266*x445 - x266*x451 + 12*x269*x66 - 12*x270*x59 - x276*x68 - x289*x68 - x291*x68 - x293*x68 - x296*x68 - x298*x68 - x30*x364*x414 - x301*x68 - x303*x68 - x311*x68 - x317*x68 - x319*x68 + x32*x341*x414 - x322*x68 - x324*x68 - x327*x68 - x338*x68 - x340*x68 + x342*x61 + x345*x61 + x347*x61 + x348*x61 + x350*x61 + x351*x61 + x353*x61 + x355*x61 + x356*x61 + x357*x61 + x358*x61 + x359*x61 + x360*x61 + x361*x61 + x362*x61 + x363*x61 - x405*x407 - x405*x418 - x407*x410 + x408*x409 + x408*x411 + x409*x419 - x410*x418 + x411*x419 - x424*x93 - x425*x426 - x425*x438 + x426*x427 + x426*x449 - x426*x450 + x427*x438 - x431*x93 - x432*x83 - x432*x93 - x435*x436 - x435*x446 + x438*x449 - x438*x450 - x442*x93 - x443*x52 - x443*x59 + x444*x64 + x444*x66 + x452*x453 + x452*x465 - x453*x456 + x454*x455 + x454*x460 - x455*x457 - x456*x465 - x457*x460 - x458*x52 - x458*x59 + x459*x64 + x459*x66) - x69*x70, -r_cut*x38*x40*x591 - x150*x599 + x150*x601 - x232*x599 + x232*x601 + x234*x609 + x235*x615 - x38*x41*x593 + x39*x591 + x414*x590*x636 + x426*x627 + x437*x617 + x438*x627 + x445*x611 + x447*x617 + x448*x617 + x451*x611 + x453*x618 + x455*x619 + x46*x590*(2*x111*x566 + x123*x200*x645 + x127*x161*x645 + x161*x223*x638 + 5*x173*x223*x321 + (5/2)*x192*x564 + x200*x221*x638 + (5/2)*x209*x566 + x212*x670 + x214*x670 + (15/2)*x221*x483 + (15/2)*x223*x544 + (1/2)*x225*x288 + (1/2)*x227*x344 + (15/2)*x299*x375 + x306*x662*x666 + x308*x365*x652 + x309*x394*x514 + 5*x309*x588 + (15/2)*x320*x584 + (15/2)*x325*x588 + (15/2)*x354*x379 + x365*x661 + x366*x649 + 2*x366*x662 + x368*x661 + x369*x652 + 3*x375*x543 + 3*x379*x481 + x385*x522 + x385*x677 + x394*x686 + x395*x51*x658 + x395*x63*x659 + x397*x686 + x43*x642 + x44*x642 + x512*x579 + x512*x580 + x512*x581 + x512*x582 + x522*x575 + x525*x659 + x547*x658 + x555*x649 + 2*x564*x84 + x575*x677 + x579*x673 + x579*x674 + x579*x678 + (1/2)*x58*(720.0*e*x*x11*x155*x25 + 600.0*e*x*x284*x285*x3*x5*x6 + 120.0*e*x*x3*x5*x6*x77 + 600.0*x*x1*x154*x28*x285 + 600.0*x1*x154*x27*x285*x3 - x160*x497 - x160*x499 - x281*x497 - x281*x499 - 720.0*x282*x74 - x643*x75 - x644*x75) + x580*x673 + x580*x674 + x581*x673 + x581*x674 + x581*x678 + x582*x673 + x582*x674 + x582*x678 + x631*x682 + x631*x684 + x633*x682 + x633*x684 + x646*x647 + x646*x665 + x647*x648 + x648*x665 + (1/2)*x65*(720.0*e*x11*x12*x155*x5*x6 + 720.0*e*x11*x155*x25*x3 + 180.0*r_cut*x*x1*x155*x27 + 420.0*x*x1*x27*x469*x470 + 600.0*x1*x154*x28*x285*x3 - x106*x643 - x106*x644 - x108*x643 - x108*x644 - x199*x498 - x343*x497 - x343*x499) + x650*x651 + x650*x671 + x651*x653 + x653*x671 + x654*x655 + x654*x672 + x655*x656 + x655*x657 + x655*x660 + x656*x672 + x657*x672 + x660*x672 + x663*x664 + x663*x675 + x664*x667 + x666*x669 + x666*x676 + x667*x675 + x668*x669 + x668*x676 + x679*x680 + x679*x683 + x679*x685 + x680*x681 + x681*x683 + x681*x685) + x460*x619 + x461*x617 + x464*x610 + x465*x618 + x589*x610 + x593*x70 + x594*x595 + x594*x603 - x595*x596 - x596*x603 - x597*x609 - x598*x624 + x600*x624 + x604*x606 + x604*x616 + x604*x626 + x604*x637 - x606*x608 - x607*x615 - x608*x616 - x608*x626 - x608*x637 + x612*x613 + x612*x620 + x612*x625 - x613*x614 - x614*x620 - x614*x625]


deflection_fns = [deflection_0, deflection_1, deflection_2, deflection_3, deflection_4, deflection_5]
